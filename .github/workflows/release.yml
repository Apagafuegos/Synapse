name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: synapse
            archive_name: synapse-linux-x86_64.tar.gz
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            artifact_name: synapse.exe
            archive_name: synapse-windows-x86_64.zip
    
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust target
      run: rustup target add ${{ matrix.target }}
    
    - name: Install Windows toolchain
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Build frontend
      run: |
        cd synapse-web/frontend-react
        npm install
        npm run build

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }} --bin synapse
    
    - name: Strip binary (Linux)
      if: matrix.target == 'x86_64-unknown-linux-gnu'
      run: strip target/${{ matrix.target }}/release/synapse
    
    - name: Create archive
      shell: bash
      run: |
        staging="synapse-${{ matrix.target }}"
        mkdir -p "$staging"

        # Copy frontend files
        cp -r synapse-web/frontend-react/dist "$staging/frontend"

        if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
          cp "target/${{ matrix.target }}/release/synapse" "$staging/"
          tar czf "${{ matrix.archive_name }}" -C "$staging" .
        else
          cp "target/${{ matrix.target }}/release/synapse.exe" "$staging/"
          cd "$staging" && 7z a "../${{ matrix.archive_name }}" * && cd ..
        fi
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ matrix.archive_name }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}